upstream admin {
    server  {{groups['app'][0]}}:8001  fail_timeout=0;
}

server {
    listen 80;
    server_name {{ admin_domain }};
    return 301 https://$host$request_uri;
}

server {
    listen       443 ssl;
    server_name {{ admin_domain }};

    root        /usr/share/nginx/html;
    index       index.html index.htm;
    charset     utf-8;

    ssl on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
    ssl_certificate /etc/nginx/ssl/server.crt;
    ssl_certificate_key /etc/nginx/ssl/server.key;

    access_log   /var/log/nginx/access.log  ltsv;
    error_log    /var/log/nginx/error.log   error;
    rewrite_log  on;

    add_header   X-Content-Type-Options  nosniff;
    add_header   X-Frame-Options         DENY;
    add_header   X-XSS-Protection        "1; mode=block";

    # access control
    set $allow "true";
#    if ($http_x_forwarded_for ~ 118\.238\.250\.236) { set $allow "true"; } # ZUU OFFICE
#    if ($http_x_forwarded_for ~ 52\.199\.194\.37)   { set $allow "true"; } # AWS NAT GW
#    if ($http_x_forwarded_for ~ 131\.213\.26\.72)   { set $allow "true"; } # Tanahashi
    # nginx server-status
    include  /etc/nginx/include/server-status;

    location = / {
        if ($allow != "true") {
          return 403;
        }
        try_files  $request_filename  @admin;
    }

    location / {
        if ($allow != "true") {
          return 403;
        }
        try_files  $request_filename  @admin;
    }

    location @admin {
        include  /etc/nginx/include/proxy;

        proxy_pass               http://admin;
        #proxy_redirect           http://  http://;
        #proxy_set_header         X-Forwarded-Proto  https;
        client_max_body_size     8m;
        client_body_buffer_size  128k;
    }

    location /assets/ {
        if ($allow != "true") {
          return 403;
        }

        alias       /opt/go/src/github.com/zuu-development/papillon/static/admin/assets/;
        add_header  Cache-Control  "public";
        expires     1m;
    }

    # prevent access
    location ~ /\. {
        access_log     off;
        log_not_found  off;
        return         404;
    }

    location ~* (?:readme|readme-[^\.]+)\.(?:html?|md|txt)$  {
        access_log     off;
        log_not_found  off;
        return         404;
    }

    location ~* .*\.(bak|log|sql|tmp|swp|swo)$ {
        access_log     off;
        log_not_found  off;
        return         404;
    }
}
